# -*- coding: utf-8 -*-
"""MLproject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15KlzKwCGKEpaZB0ZE9D_spzy-aEQl-rs
"""

import pandas as panda
import numpy as np
import difflib
import tkinter as tk
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

movies = panda.read_csv('movies.csv')
print(movies.columns)

features = ['keywords','cast','genres','director', 'crew', 'title']

for feature in features:
    movies[feature] = movies[feature].fillna('')

mergedFeatures = ""

for i in range(len(features)):
    mergedFeatures += movies[features[i]] + " "

vectorizor = TfidfVectorizer()

featureVectorizer = vectorizor.fit_transform(mergedFeatures)

simalarityMatrix = cosine_similarity(featureVectorizer)

def getRecommendations(title, simalarityMatrix, movies):
    indices = panda.Series(movies.index, index=movies['title']).drop_duplicates()
    idx = indices[title]
    sims = list(enumerate(simalarityMatrix[idx]))
    sims = sorted(sims, key=lambda x: x[1], reverse=True)
    sims = sims[1:11]
    movieIds = [i[0] for i in sims]

    return movies['title'] [movieIds]

def getMovieName(title):
    closeMatches = difflib.get_close_matches(title, movies['title'])
    if len(closeMatches) > 0:
        return closeMatches[0]
    else:
        return "No movie found"

title = input("Enter movie title: ")
title = getMovieName(title)
if title != "No movie found":
  print("Recommended movies are: ")
  print(getRecommendations(title, simalarityMatrix, movies))
else:
  print("No movie found")